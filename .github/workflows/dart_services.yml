name: package:dart_services

on:
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/dart_services.yml'
      - 'pkgs/dart_services/**'
  pull_request:
    branches: [ main ]
    paths:
      - '.github/workflows/dart_services.yml'
      - 'pkgs/dart_services/**'
  schedule:
    - cron: '0 0 * * 0' # weekly

jobs:
  # Check code formatting, static analysis, and build on a single OS (linux)
  # against Dart stable and beta.
  analyze:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: pkgs/dart_services/
    strategy:
      fail-fast: false
      matrix:
        sdk: [stable, beta, main]
    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
      - uses: dart-lang/setup-dart@b64355ae6ca0b5d484f0106a033dd1388965d06d
      - name: Install dependencies
        run: sudo apt-get install -y protobuf-compiler redis
      - name: Install dependencies
        run: dart pub get
      - name: Analyze code
        run: dart analyze --fatal-infos .
      - name: check formatting
        run: dart format --set-exit-if-changed lib test tool  
      - name: Prepare Flutter
        run: |
          dart run tool/update_sdk.dart ${{ matrix.sdk }}
          export PATH=$PATH:$PWD/flutter-sdks/${{ matrix.sdk }}/bin
          flutter doctor -v
          flutter config --enable-web
      - name: Run tests
        env:
          FLUTTER_CHANNEL: ${{ matrix.sdk }}
        run: |
          export PATH=$PATH:$HOME/.pub-cache/bin
          dart pub global activate protoc_plugin
          # Prepare to run unit tests (but do not actually run tests).
          dart run grinder buildbot
          # Ensure that we've uploaded the compilation artifacts to google storage.
          dart run grinder validate-storage-artifacts
          dart test

  # Run the benchmarks on the bots to ensure they don't regress.
  benchmark:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: pkgs/dart_services/
    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
      - uses: dart-lang/setup-dart@b64355ae6ca0b5d484f0106a033dd1388965d06d
      - run: sudo apt-get install -y protobuf-compiler redis
      - run: dart pub get
      - name: Download the Flutter SDK
        run: |
          dart run tool/update_sdk.dart stable
          export PATH=$PATH:$PWD/flutter-sdks/stable/bin
          flutter doctor -v
      - name: Prep the repo
        env:
          FLUTTER_CHANNEL: stable
        run: dart run grinder buildbot
      - name: Run benchmarks
        run: dart benchmark/bench.dart
