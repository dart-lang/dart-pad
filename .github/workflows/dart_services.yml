name: package:dart_services

on:
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/dart_services.yml'
      - 'pkgs/dart_services/**'
  pull_request:
    branches: [ main ]
    paths:
      - '.github/workflows/dart_services.yml'
      - 'pkgs/dart_services/**'
  schedule:
    - cron: '0 0 * * *' # daily

jobs:
  # Check code formatting, static analysis, and build on a single OS (linux).
  verify:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: pkgs/dart_services/
    strategy:
      fail-fast: false
      matrix:
        sdk: [stable, beta, master] # main
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - uses: subosito/flutter-action@aa6d9b984461fff0e0e0673f96483607df98db84
        with:
            channel: ${{ matrix.sdk }}
      - run: flutter --version

      - name: Install dart dependencies
        run: dart pub get

      - name: Analyze project source
        run: dart analyze --fatal-infos

      - name: Verify formatting
        run: dart format --set-exit-if-changed bin lib test tool

      - name: Create template projects and populate the custom pub cache
        run: dart run grinder build-project-templates

      # Build the web artifacts on the bots to ensure they don't regress.
      - name: Build web artifacts
        run: dart run grinder build-storage-artifacts

      - name: Run tests
        run: dart test
